perror()
strerror()
equation : nb_fourmis_i = (F + Sum Pn - (n * P_i)) / n

TODO

BFS / EK :
-Ameliorer algo pour gerer les salles pourries

Global :
-Norme
-protection retour malloc : malloc ft_init_final_room leaks si NULL
-choisir nombre max fourmis autorise


Visualiseur :
-integrer la verification des doublons de coordonnee dans le parser
(Copier le code C en python)
-Attention aux coordonnees en int max ou int min (coordonnees toutes acceptes dans le programme de C tant que caracteres numeriques)





Tests Putes :

Error ou prendre la salle, etre coherent
Pour l'instant : OK
##start
##start
##start
room 1 1

Pour le moment : On affiche ok et on prend la deuxieme salle
Etre coherent avec le reste
##start
room 1 1
##start
room 2 2

OK
Doit etre ok
##start
##unknown
##unknown
room 1 1

OK
Invalide : apres pipes, on ne prend que des commandes ou des commentaires mais pas d'acquisision de salles
room1-room2
##start
start 1 1






Questions a poser :


les lignes commençant par un ## sont des commandes modifiant les propriétés de
la ligne significative qui vient juste après.
-> 
##start
##start
room 1 1
Error ou pas ?

##start
room1 1 1
##start
room2 2 2
Error ou pas ?

##start
##unknown
room 1 1
Error ou pas ?

Coordonnees en doublon : Error ou pas ?

Salle reliee a elle meme : OK ?
Deux ou + chemins entre deux salles : OK ?
